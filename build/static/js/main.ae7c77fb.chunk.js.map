{"version":3,"sources":["components/Child5.js","components/Child4.js","components/Child3.js","components/Child1.js","App.js","index.js"],"names":["memo","users","useContext","UserContext","useState","inputValue","setInputValue","count","useRef","inputElement","useEffect","current","JSON","stringify","type","value","onChange","e","target","ref","onClick","Child4","Child3","addUser","console","log","length","map","user","name","allowedExtensions","createContext","App","error","setError","file","setFile","filterInformation","columns","fileName","total_orders","productsSale","productsWithBrands","forEach","element","sale","qty","Number","brandSale","brand","brandIndex","findIndex","object","push","index","productsAvg","product","avg","toFixed","filename","generateCSV","productWithPopularBrand","index2","filename2","data","link","document","createElement","csv","array","result","keys","Object","item","ctr","key","convertArrayOfObjectsToCSV","match","setAttribute","encodeURI","click","CssBaseline","Container","maxWidth","className","htmlFor","Button","variant","component","hidden","files","inputFile","fileExtension","split","includes","id","style","marginLeft","color","reader","FileReader","onload","Papa","parse","header","parsedData","readAsText","handleParse","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.ae7c77fb.chunk.js","sourcesContent":["import React, { useState, useRef, useEffect, useContext, memo } from \"react\";\r\nimport { UserContext } from \"../App\";\r\n\r\nconst Child5 = () => {\r\n    const users = useContext(UserContext)\r\n    const [inputValue, setInputValue] = useState(\"\");\r\n    const count = useRef(0);\r\n    const inputElement = useRef();\r\n\r\n    useEffect(() => {\r\n        count.current = count.current + 1;\r\n      });\r\n\r\n    const focusInput = () => {\r\n    inputElement.current.value = \"eeeeeeeee\";\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            Child 5\r\n            {JSON.stringify(users)}\r\n\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={(e) => setInputValue(e.target.value)}\r\n                ref={inputElement}\r\n            />\r\n            <button onClick={focusInput}>Focus Input</button>\r\n            <h1>Render Count: {count.current}</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default memo(Child5);","import React, { useState, useEffect } from \"react\";\r\nimport Child5 from \"./Child5\";\r\n\r\nexport const Child4 = () => {\r\n    return (\r\n        <div>\r\n            <Child5 /> \r\n        </div>\r\n    )\r\n}","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { UserContext } from \"../App\";\r\nimport { Child4 } from \"./Child4\";\r\n\r\n\r\nexport const Child3 = () => {\r\n\r\n    const users = useContext(UserContext)\r\n    return (\r\n        <div>\r\n            CHiLD 3\r\n            <Child4 />\r\n        </div>\r\n    )\r\n}","import React, { useState, useEffect, createContext, useContext, memo} from \"react\";\r\nimport { Child3 } from \"./Child3\";\r\n\r\nconst Child1 = ({users, addUser}) => {\r\n    // const user = useContext(UserContext);\r\n    useEffect(() => {\r\n     console.log(\"called\") \r\n    })\r\n    \r\n    return (\r\n        <div>\r\n            <>\r\n            {users.length > 0 && users.map((user) => (\r\n                <li>{user.name}</li>\r\n            ))}\r\n            </>\r\n            <>////////////////</>\r\n            <button onClick={addUser}> add User</button>\r\n            <>////////////////</>\r\n            \r\n            <Child3 />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default memo(Child1);","import React, { useState, useEffect, createContext, useCallback } from \"react\";\r\nimport Papa from \"papaparse\";\r\nimport { CSVLink } from \"react-csv\";\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Container from '@material-ui/core/Container';\r\nimport '@testing-library/jest-dom';\r\nimport './App.css';\r\nimport Child1 from \"./components/Child1\";\r\nimport { Child2 } from \"./components/Child2\";\r\n\r\n\r\nconst allowedExtensions = [\"vnd.ms-excel\"];\r\n\r\nexport const UserContext = createContext();\r\n\r\nconst App3 = () => {\r\n\r\n    const [first, setfirst] = useState(0);\r\n    const [users, setusers] = useState([\r\n        {\r\n            name: \"ali\",\r\n            fname:\"murtaza\"\r\n        },\r\n        {\r\n            name: \"ali\",\r\n            fname:\"murtaza\"\r\n        },\r\n        {\r\n            name: \"ali\",\r\n            fname:\"murtaza\"\r\n        },\r\n        {\r\n            name: \"ali\",\r\n            fname:\"murtaza\"\r\n        }\r\n    ]);\r\n\r\n    useEffect(() => {\r\n        console.log(\"app called\") \r\n       })\r\n    \r\n    const addUser = useCallback(() => {\r\n\r\n    setusers((t) => [...users, {\r\n        name: \"ali\",\r\n        fname:\"murtaza\"\r\n    }]);\r\n    }, [users]);\r\n\r\n    return (\r\n        <UserContext.Provider value={users}>\r\n                main component\r\n                i am {first}\r\n                <button onClick={() => setfirst(first+1)}>change 1st</button>\r\n            <Child1 users={users} addUser={addUser} />\r\n            <Child2 users={users} />\r\n        </UserContext.Provider>\r\n    )\r\n}\r\n\r\nconst App = () => {\r\n\t\r\n\tconst [error, setError] = useState(\"\");\r\n\tconst [file, setFile] = useState(\"\");\r\n\tconst [data, setData] = useState();\r\n    const btnClass= \"MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedPrimary\";\r\n\r\n\tconst handleFileChange = (e) => {\r\n\t\tsetError(\"\");\r\n\t\t\r\n\t\t// Check if user has entered the file\r\n\t\tif (e.target.files.length) {\r\n\t\t\tconst inputFile = e.target.files[0];\r\n\r\n\t\t\tconst fileExtension = inputFile?.type.split(\"/\")[1];\r\n\r\n\t\t\tif (!allowedExtensions.includes(fileExtension)) {\r\n\t\t\t\tsetError(\"Please input a Comma Delimited CSV file\");\r\n                setFile({})\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tsetFile(inputFile);\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleParse = (fileName) => {\r\n        \r\n\t\tif (!file) return setError(\"Enter a valid file\");\r\n\r\n\t\tconst reader = new FileReader();\r\n\t\t\r\n\t\treader.onload = async ({ target }) => {\r\n\t\t\tconst csv = Papa.parse(target.result, { header: false });\r\n\t\t\tconst parsedData = csv?.data;\r\n            \r\n            if(!parsedData[0][2]) return setError(\"Number of rows must be atleast 1\");\r\n\r\n            if( !10000 > parsedData.length) return setError(\"Number of rows must be less then 10000\");\r\n\r\n            filterInformation(parsedData,fileName)\r\n\t\t};\r\n\t\treader.readAsText(file);\r\n\t};\r\n\r\n    const filterInformation = (columns, fileName) =>{\r\n        let total_orders = 0;\r\n        let productsSale = []\r\n        let productsWithBrands = []\r\n        columns.forEach(element => {\r\n            if(element.length > 3){\r\n                total_orders += 1;\r\n                \r\n                let sale = {\r\n                    name: element[2],\r\n                    qty: Number(element[3]),\r\n                }\r\n                \r\n                let brandSale = {\r\n                    name: element[2],\r\n                    brand: element[4],\r\n                    qty: 1\r\n                }\r\n\r\n                const brandIndex = productsWithBrands.findIndex(object => {\r\n                    return  object.name === brandSale.name && object.brand === brandSale.brand;\r\n                });\r\n\r\n                if(brandIndex > -1){\r\n                    productsWithBrands[brandIndex].qty += 1 \r\n                } else {\r\n                    productsWithBrands.push(brandSale);\r\n                }\r\n\r\n                const index = productsSale.findIndex(object => {\r\n                    return  object.name === sale.name;\r\n                });\r\n                \r\n                if(index > -1){\r\n                    productsSale[index].qty += sale.qty \r\n                } else {\r\n                    productsSale.push(sale);\r\n                }\r\n            }\r\n        });\r\n        \r\n        let productsAvg = []\r\n        productsSale.forEach(element => {\r\n            let product = {\r\n                name : element.name,\r\n                avg : (element.qty / total_orders).toFixed(2)\r\n            }\r\n            productsAvg.push(product)\r\n        });\r\n\r\n        const filename = `0_${fileName}`;\r\n        generateCSV(productsAvg,filename );\r\n        let productWithPopularBrand = []\r\n\r\n        productsWithBrands.forEach( element => {\r\n            \r\n            const index2 = productWithPopularBrand.findIndex(object => {\r\n                return  object.name === element.name;\r\n            });\r\n\r\n            if(index2 > -1){\r\n                if(element.qty > productWithPopularBrand[index2].qty)\r\n                productWithPopularBrand[index2].qty += element.qty \r\n                productWithPopularBrand[index2].brand += element.brand \r\n            } else {\r\n                productWithPopularBrand.push(element);\r\n            }\r\n        });\r\n        \r\n        const filename2 = `1_${fileName}`;\r\n        generateCSV(productWithPopularBrand,filename2);\r\n    }\r\n\r\n    const convertArrayOfObjectsToCSV = (array) => {\r\n        let result;\r\n        const columnDelimiter = ',';\r\n        const lineDelimiter = '\\n';\r\n        const keys = Object.keys(array[0]);\r\n        result = '';\r\n    \r\n        array.forEach(item => {\r\n            let ctr = 0;\r\n            keys.forEach(key => {\r\n                if (ctr > 0) result += columnDelimiter;\r\n    \r\n                result += item[key];\r\n                ctr++;\r\n            });\r\n            result += lineDelimiter;\r\n        });\r\n        return result;\r\n    }\r\n\r\n    const generateCSV = (data, name) => {\r\n        const link = document.createElement('a');\r\n        let csv = convertArrayOfObjectsToCSV(data);\r\n        const filename = name;\r\n        if (!csv.match(/^data:text\\/csv/i)) {\r\n            csv = `data:text/csv;charset=utf-8,${csv}`;\r\n        }\r\n        link.setAttribute('href', encodeURI(csv));\r\n        link.setAttribute('download', filename);\r\n        link.click();\r\n    }\r\n    \r\n\treturn (\r\n\t\t<div>\r\n            <CssBaseline />\r\n            <Container maxWidth=\"md\">\r\n                <div className=\"mainDiv\">\r\n                    <label htmlFor=\"csvInput\" className=\"labelStyle\">\r\n                        Welcome to CSV Compiler 123\r\n                    </label>\r\n                    <div className=\"inputDivStyle\">\r\n                        <Button\r\n                            className=\"inputButtonStyle\"\r\n                            variant=\"contained\"\r\n                            component=\"label\"\r\n                            >\r\n                            Upload File\r\n                            <input\r\n                                type=\"file\"\r\n                                hidden\r\n                                onChange={handleFileChange}\r\n                                id=\"csvInput\"\r\n                                name=\"file\"\r\n                            />\r\n                        </Button>\r\n                        <span style={{marginLeft:\"10px\"}}>{file.name}</span>\r\n                    </div>\r\n                </div>\r\n                \r\n                <div className=\"generateDivCss\">\r\n                    {error ? error : file.name && \r\n                    <Button variant=\"contained\" color=\"primary\" component=\"label\" onClick={() => handleParse(file.name)} >\r\n                        Generate Files\r\n                    </Button>\r\n                    }\r\n                </div>\r\n            </Container>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n\r\n"],"sourceRoot":""}